{"version":3,"file":"static/js/8103.aa153be8.chunk.js","mappings":"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","sources":["views/employee/bulletinPaie/font.js","views/employee/bulletinPaie/styles.js","views/employee/bulletinPaie/Section1.jsx","utils/formatNumberWithSpaces.js","views/employee/bulletinPaie/Section2.jsx","views/employee/bulletinPaie/Section3.jsx","views/employee/bulletinPaie/BulletinPaie.jsx"],"sourcesContent":["// fonts.js\nimport { Font } from '@react-pdf/renderer'\nimport RobotoItalic from 'src/assets/fonts/Roboto/Roboto-Italic.ttf'\nimport RobotoBoldItalic from 'src/assets/fonts/Roboto/Roboto-BoldItalic.ttf'\nimport RobotoBold from 'src/assets/fonts/Roboto/Roboto-Bold.ttf'\nimport RobotoRegular from 'src/assets/fonts/Roboto/Roboto-Regular.ttf'\nimport RobotoMedium from 'src/assets/fonts/Roboto/Roboto-Medium.ttf'\n\nconst registerFonts = () => {\n  Font.register({\n    family: 'Roboto',\n    fonts: [\n      { src: RobotoRegular },\n      { src: RobotoItalic, fontStyle: 'italic' },\n      { src: RobotoBold, fontWeight: 'bold', fontStyle: 'normal' },\n      { src: RobotoMedium, fontWeight: 'bold', fontStyle: 'medium' },\n      { src: RobotoBoldItalic, fontStyle: 'italic', fontWeight: 'bold' },\n    ],\n  })\n}\n\nexport default registerFonts\n","import { StyleSheet } from '@react-pdf/renderer'\n\nexport const styles = StyleSheet.create({\n  table: {\n    display: 'flex',\n  },\n  row: {\n    flexDirection: 'row',\n    display: 'flex',\n  },\n  col: {\n    flexDirection: 'column',\n    display: 'flex',\n  },\n  borderRight: {\n    borderRight: 2,\n  },\n  borderBottom: {\n    borderBottom: 2,\n  },\n  borderTop: {\n    borderTop: 2,\n  },\n  header: {\n    fontSize: 11,\n    justifyContent: 'center',\n    textTransform: 'uppercase',\n    alignItems: 'center',\n    paddingTop: 3,\n    paddingBottom: 3,\n    borderTop: 2,\n  },\n  subTitle: {\n    textAlign: 'left',\n    paddingLeft: 3,\n    textTransform: 'capitalize',\n  },\n  cell: {\n    paddingRight: 3,\n    paddingBottom: 4,\n    paddingTop: 4,\n    fontSize: 10,\n  },\n  textRight: {\n    textAlign: 'right',\n    paddingRight: 3,\n  },\n  sousTotal: {\n    fontSize: 9,\n    fontFamily: 'Roboto',\n    fontWeight: 'bold',\n  },\n\n  textBold: {\n    fontFamily: 'Roboto',\n    fontWeight: 'bold',\n  },\n  textMedium: {\n    fontFamily: 'Roboto',\n    fontWeight: 'medium',\n  },\n  justifyBetween: {\n    justifyContent: 'space-between',\n  },\n  textBoldItalic: {\n    fontFamily: 'Roboto',\n    fontStyle: 'italic',\n  },\n})\n","import React from 'react'\nimport { Text, View } from '@react-pdf/renderer'\nimport { PropTypes } from 'prop-types'\nimport registerFonts from './font'\nimport { styles } from './styles'\n\nregisterFonts()\n\nconst Section1 = (props) => {\n  const dateSelectionne = props.data.dateSelectionne\n  const nomEmployeur = props.data.employeur.nom\n  const addresseEmployeur = props.data.employeur.adresse\n  const CP_et_VilleEmployeur = props.data.employeur.CP_et_Ville\n  const nif = props.data.employeur.nif\n  const stat = props.data.employeur.stat\n  const rcs = props.data.employeur.rcs\n  const nomPrenomSalarie = props.data.salarie.nom\n  const prenomSalarie = props.data.salarie.prenom\n  const fonction = props.data.salarie.poste\n  const numMatriculSalarie = props.data.salarie.matricule\n  const catSalarie = props.data.salarie.cat\n\n  const Line = ({ label, value, valueBold, marginBottom }) => {\n    return (\n      <View style={[styles.row, { width: '100%' }]}>\n        <Text\n          style={[\n            styles.cell,\n            styles.textBoldItalic,\n            styles.textBold,\n            { width: '45%', padding: 2 },\n          ]}\n        >\n          {label}\n        </Text>\n        <Text\n          style={[\n            styles.cell,\n            valueBold && styles.textBold,\n            {\n              width: '65%',\n              textAlign: 'center',\n              padding: 2,\n              marginBottom: marginBottom ? marginBottom : 0,\n            },\n          ]}\n        >\n          {value}\n        </Text>\n      </View>\n    )\n  }\n  Line.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    valueBold: PropTypes.bool,\n    marginBottom: PropTypes.number,\n  }\n\n  const Employeur = () => {\n    return (\n      <>\n        <Line label={'Nom:'} value={nomEmployeur} valueBold={true} />\n        <Line label={'Adresse:'} value={addresseEmployeur} />\n        <Line label={'CP et Ville:'} value={CP_et_VilleEmployeur} />\n        <Line label={'Numéro NIF:'} value={nif} />\n        <Line label={'Numéro STAT:'} value={stat} />\n        <Line label={'RSC:'} value={rcs} marginBottom={15} />\n      </>\n    )\n  }\n\n  const Salarie = () => {\n    return (\n      <>\n        <Line label={'Nom et Prénom:'} value={`${nomPrenomSalarie} ${prenomSalarie}`} />\n        <Line label={'Fonction:'} value={fonction} />\n        <Line label={'Numéro Matricule:'} value={numMatriculSalarie} />\n        <Line label={'Catégorie:'} value={catSalarie} />\n        <Line label={'Mois:'} value={dateSelectionne} />\n      </>\n    )\n  }\n\n  return (\n    <>\n      <View style={[{ width: '100%' }]}>\n        <Text\n          style={[\n            styles.textBold,\n            { textTransform: 'uppercase', textAlign: 'center', fontSize: 11, padding: 1 },\n          ]}\n        >\n          bulletin de paie\n        </Text>\n      </View>\n      <View style={[styles.row, styles.borderTop, styles.borderBottom, { width: '100%' }]}>\n        <Text\n          style={[\n            styles.borderRight,\n            styles.textBold,\n            {\n              width: '45%',\n              fontSize: 10,\n              textTransform: 'uppercase',\n              paddingLeft: 5,\n              paddingBottom: 1,\n              paddingTop: 1,\n            },\n          ]}\n        >\n          Employeur:\n        </Text>\n        <Text\n          style={[\n            styles.textBold,\n            {\n              width: '55%',\n              fontSize: 10,\n              textTransform: 'uppercase',\n              paddingLeft: 5,\n              paddingBottom: 1,\n              paddingTop: 1,\n            },\n          ]}\n        >\n          Salarie:\n        </Text>\n      </View>\n      <View style={[styles.row, styles.borderBottom, { width: '100%' }]}>\n        <View style={[styles.borderRight, { width: '45%' }]}>\n          <Employeur />\n        </View>\n        <View style={[{ width: '55%' }]}>\n          <Salarie />\n        </View>\n      </View>\n    </>\n  )\n}\n\nSection1.propTypes = {\n  data: PropTypes.object,\n}\n\nexport default Section1\n","// Fonction utilisée dans une composante pour formater un nombre avec des espaces.\n// À utiliser uniquement pour la création de documents PDF.\n// Utilisez plutôt formatAriaryMga pour la monnaie malgache dans l'affichage au sein de composants du DOM.\n\nfunction formatNumberWithSpaces(number) {\n  const roundedNumber = Number(number).toFixed(2)\n  const formattedNumber = roundedNumber.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\n\n  return formattedNumber.replace('.', ',')\n}\n\nexport default formatNumberWithSpaces\n","import React from 'react'\nimport { Text, View, StyleSheet } from '@react-pdf/renderer'\nimport { PropTypes } from 'prop-types'\nimport registerFonts from './font'\nimport formatNumberWithSpaces from 'src/utils/formatNumberWithSpaces'\n\n// Chager les fontes personnalisées\nregisterFonts()\n\nconst styles = StyleSheet.create({\n  table: {\n    display: 'table',\n    width: 'auto',\n    border: 'collapse',\n  },\n  tableRow: {\n    flexDirection: 'row',\n  },\n  tableCell: {\n    fontSize: 10,\n    textAlign: 'left',\n    padding: 2,\n    paddingTop: 2,\n  },\n  tableCell50: {\n    width: '50%',\n  },\n  tableCell15: {\n    width: '15%',\n  },\n  bordered: {\n    borderStyle: 'solid',\n    borderWidth: 1,\n  },\n})\n\nconst Section2 = (props) => {\n  const salaireBase = props.data.salarie.salaireBase\n    ? formatNumberWithSpaces(props.data.salarie.salaireBase) + ' Ar'\n    : '-'\n  const valHs30 = props.data.valHs30 ? formatNumberWithSpaces(props.data.valHs30) + ' Ar' : '-'\n  const valHs50 = props.data.valHs50 ? formatNumberWithSpaces(props.data.valHs50) + ' Ar' : '-'\n  const salaireBrut = props.data.salaireBrut\n    ? formatNumberWithSpaces(props.data.salaireBrut) + ' Ar'\n    : '-'\n\n  const plafondSME = props.data.plafondSME\n    ? formatNumberWithSpaces(props.data.plafondSME) + ' Ar'\n    : '-'\n\n  return (\n    <View style={[styles.table]}>\n      <View style={styles.tableRow}>\n        <View style={[styles.tableCell50]}>\n          <Text style={{ paddingTop: 20, paddingLeft: 2, fontSize: 10 }}>Salaire de base</Text>\n        </View>\n        <View\n          style={[\n            styles.tableCell15,\n            styles.bordered,\n            { marginTop: 20, fontSize: 10, textAlign: 'right', paddingLeft: 2, paddingRight: 3 },\n          ]}\n        >\n          <Text>{salaireBase}</Text>\n        </View>\n        <View style={[styles.tableCell15, { paddingLeft: 2, marginTop: 20, fontSize: 10 }]}>\n          <Text>Plafond SME :</Text>\n        </View>\n        <View\n          style={[\n            styles.tableCell15,\n            styles.bordered,\n            { paddingLeft: 2, marginTop: 20, fontSize: 10, paddingRight: 3 },\n          ]}\n        >\n          <Text style={[{ textAlign: 'right', fontSize: 10 }]}> {plafondSME} </Text>\n        </View>\n      </View>\n\n      <View style={styles.tableRow}>\n        <View style={styles.tableCell50}>\n          <Text style={{ fontSize: 10, paddingLeft: 2 }}>HS à 30%</Text>\n        </View>\n        <View style={[styles.bordered, styles.tableCell15, { paddingRight: 3 }]}>\n          <Text style={{ textAlign: 'right', fontSize: 10 }}>{valHs30}</Text>\n        </View>\n      </View>\n\n      <View style={styles.tableRow}>\n        <View style={styles.tableCell50}>\n          <Text style={{ fontSize: 10, paddingLeft: 2 }}>HS à 50%</Text>\n        </View>\n        <View style={[styles.bordered, styles.tableCell15, { paddingRight: 3 }]}>\n          <Text style={{ textAlign: 'right', fontSize: 10 }}>{valHs50}</Text>\n        </View>\n      </View>\n\n      <View style={styles.tableRow}>\n        <View style={[styles.tableCell50, { paddingRight: 3 }]}>\n          <Text style={{ fontSize: 10, paddingLeft: 2, fontWeight: 'bold', fontFamily: 'Roboto' }}>\n            SALAIRE BRUT\n          </Text>\n        </View>\n        <View\n          style={[\n            styles.bordered,\n            styles.tableCell15,\n            {\n              padding: 1,\n              paddingRight: 3,\n              fontSize: 10,\n              paddingLeft: 2,\n            },\n          ]}\n        >\n          <Text\n            style={{ textAlign: 'right', fontSize: 10, fontWeight: 'bold', fontFamily: 'Roboto' }}\n          >\n            {salaireBrut}\n          </Text>\n        </View>\n      </View>\n\n      <View style={[styles.tableRow, { borderBottom: 2, marginTop: 15 }]}></View>\n      <View style={[styles.tableRow, { marginTop: 15 }]}>\n        <View style={[{ width: '45%' }]}></View>\n        <View style={[{ width: '10%', borderBottom: 2 }]}></View>\n      </View>\n    </View>\n  )\n}\n\nSection2.propTypes = {\n  data: PropTypes.object,\n}\n\nexport default Section2\n","import React from 'react'\nimport { Text, View } from '@react-pdf/renderer'\nimport { PropTypes } from 'prop-types'\nimport registerFonts from './font'\nimport formatNumberWithSpaces from 'src/utils/formatNumberWithSpaces'\nimport { format, setDefaultOptions } from 'date-fns'\nimport { fr } from 'date-fns/locale'\nimport { styles } from './styles'\n\nregisterFonts()\n\nexport default function Section3(props) {\n  // Définr la langue du date en français\n  setDefaultOptions({ locale: fr })\n\n  const indemnites = props.data.ajoutSalaire ? [props.data.ajoutSalaire].flat() : []\n  const retenues = props.data.retenuSalaire ? [props.data.retenuSalaire].flat() : []\n  const sousTotal = props.data.totalDeduction\n  const baseIrsaArrondi = props.data.baseIrsaArrondi\n  const cnaps = props.data.cnaps\n  const totalRetenues = sousTotal + baseIrsaArrondi + cnaps\n  const totalIndemnite = props.data.totalPrimeEtAvantage\n  const salaireNet = props.data.salaireNet\n  const avance = props.data.avance\n  const salaireNetAPayer = props.data.salaireNetAPayer\n  const dateVirement = format(new Date(), 'cccc dd MMMM uuuu', { locale: fr })\n\n  const Header = () => {\n    return (\n      <View style={[styles.row, styles.textBold, { width: '100%', marginTop: '5mm' }]}>\n        <View style={[styles.borderRight, styles.borderBottom, styles.header, { width: '35%' }]}>\n          <Text style={[{}]}>cotisation</Text>\n        </View>\n        <View style={[{ width: '65%' }]}>\n          <View style={[styles.row]}>\n            <View\n              style={[\n                styles.row,\n                styles.borderRight,\n                styles.borderBottom,\n                styles.header,\n                { width: '50%' },\n              ]}\n            >\n              <Text>retenue</Text>\n            </View>\n            <View style={[styles.row, styles.borderBottom, styles.header, { width: '50%' }]}>\n              <Text style={[]}>indemnités et avantages</Text>\n            </View>\n          </View>\n\n          <View style={[styles.row, { width: '100%' }]}>\n            <View style={[styles.row, { width: '50%' }]}>\n              <Text\n                style={[\n                  styles.borderRight,\n                  styles.borderBottom,\n                  styles.subTitle,\n                  { fontSize: 10, width: '33.33%' },\n                ]}\n              >\n                base\n              </Text>\n              <Text\n                style={[\n                  styles.borderRight,\n                  styles.borderBottom,\n                  styles.subTitle,\n                  { fontSize: 10, width: '33.33%' },\n                ]}\n              >\n                taux\n              </Text>\n              <Text\n                style={[\n                  styles.borderRight,\n                  styles.borderBottom,\n                  styles.subTitle,\n                  { fontSize: 10, width: '33%' },\n                ]}\n              >\n                montant\n              </Text>\n            </View>\n            <View style={[styles.row, { width: '50%' }]}>\n              <Text\n                style={[\n                  styles.borderRight,\n                  styles.borderBottom,\n                  styles.subTitle,\n                  { fontSize: 10, width: '33.33%' },\n                ]}\n              >\n                base\n              </Text>\n              <Text\n                style={[\n                  styles.borderRight,\n                  styles.borderBottom,\n                  styles.subTitle,\n                  { fontSize: 10, width: '33.33%' },\n                ]}\n              >\n                taux\n              </Text>\n              <Text\n                style={[styles.borderBottom, styles.subTitle, { fontSize: 10, width: '33.33%' }]}\n              >\n                montant\n              </Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    )\n  }\n  const Indemnites = () => {\n    return (\n      <>\n        <View>\n          {/* <Text>Test</Text> */}\n          {indemnites.length > 0 &&\n            indemnites.map((item, key) => {\n              return (\n                <React.Fragment key={key}>\n                  <View style={[styles.row, { width: '100%' }]}>\n                    <View style={[styles.row, styles.borderRight, { width: '35%' }]}>\n                      <Text style={[styles.cell, { paddingLeft: 2 }]}>{item.label}</Text>\n                    </View>\n\n                    <View style={[styles.row, { width: '65%' }]}>\n                      <View style={[styles.row, { width: '50%' }]}>\n                        <Text style={[styles.borderRight, { width: '33.33%' }]}></Text>\n                        <Text style={[styles.borderRight, { width: '33.33%' }]}></Text>\n                        <Text style={[styles.borderRight, { width: '33%' }]}></Text>\n                      </View>\n                      <View style={[styles.row, { width: '50%' }]}>\n                        <Text\n                          style={[\n                            styles.borderRight,\n                            styles.textRight,\n                            { width: '33.33%' },\n                            styles.cell,\n                          ]}\n                        >\n                          {item.base}\n                        </Text>\n                        <Text\n                          style={[\n                            styles.borderRight,\n                            styles.textRight,\n                            { width: '33.33%' },\n                            styles.cell,\n                          ]}\n                        >\n                          {item.taux}\n                        </Text>\n                        <Text style={[{ width: '33%' }, styles.cell, styles.textRight]}>\n                          {item.montant ? formatNumberWithSpaces(item.montant) : '-'}\n                        </Text>\n                      </View>\n                    </View>\n                  </View>\n                </React.Fragment>\n              )\n            })}\n        </View>\n      </>\n    )\n  }\n\n  const Retenues = () => {\n    return (\n      <>\n        <View>\n          {retenues.length > 0 &&\n            retenues.map((item, key) => {\n              return key === retenues.length - 1 ? (\n                <React.Fragment key={key}>\n                  <View style={[styles.row, { width: '100%' }]}>\n                    <View\n                      style={[\n                        styles.row,\n                        styles.borderRight,\n                        styles.borderBottom,\n                        { width: '35%' },\n                      ]}\n                    >\n                      <Text style={[styles.cell, { paddingBottom: 20, paddingLeft: 2 }]}>\n                        {item.label}\n                      </Text>\n                    </View>\n\n                    <View style={[styles.row, { width: '65%' }]}>\n                      <View style={[styles.row, { width: '50%' }]}>\n                        <Text\n                          style={[\n                            styles.borderRight,\n                            styles.cell,\n                            styles.textRight,\n                            styles.borderBottom,\n                            { width: '33.33%', paddingBottom: 20 },\n                          ]}\n                        >\n                          {item.base ? formatNumberWithSpaces(item.base) : '-'}\n                        </Text>\n                        <Text\n                          style={[\n                            styles.borderRight,\n                            styles.cell,\n                            styles.textRight,\n                            styles.borderBottom,\n                            { width: '33.33%', paddingBottom: 20 },\n                          ]}\n                        >\n                          {item.taux && item.taux * 100 + '%'}\n                        </Text>\n                        <Text\n                          style={[\n                            styles.borderRight,\n                            styles.cell,\n                            styles.textRight,\n                            styles.borderBottom,\n                            { width: '33%', paddingBottom: 20 },\n                          ]}\n                        >\n                          {item.montant ? formatNumberWithSpaces(item.montant) : '-'}\n                        </Text>\n                      </View>\n                      <View style={[styles.row, { width: '50%' }]}>\n                        <Text\n                          style={[\n                            styles.borderRight,\n                            styles.borderBottom,\n                            { width: '33.33%', paddingBottom: 20 },\n                          ]}\n                        ></Text>\n                        <Text\n                          style={[\n                            styles.borderRight,\n                            styles.borderBottom,\n                            { width: '33.33%', paddingBottom: 20 },\n                          ]}\n                        ></Text>\n                        <Text\n                          style={[styles.borderBottom, { width: '33.33%', paddingBottom: 20 }]}\n                        ></Text>\n                      </View>\n                    </View>\n                  </View>\n                </React.Fragment>\n              ) : (\n                <React.Fragment key={key}>\n                  <View style={[styles.row, { width: '100%' }]}>\n                    <View style={[styles.row, styles.borderRight, { width: '35%' }]}>\n                      <Text style={[styles.cell, { paddingLeft: 2 }]}>{item.label}</Text>\n                    </View>\n\n                    <View style={[styles.row, { width: '65%' }]}>\n                      <View style={[styles.row, { width: '50%' }]}>\n                        <Text\n                          style={[\n                            styles.borderRight,\n                            styles.cell,\n                            styles.textRight,\n                            { width: '33.33%' },\n                          ]}\n                        >\n                          {item.base ? formatNumberWithSpaces(item.base) : '-'}\n                        </Text>\n                        <Text\n                          style={[\n                            styles.borderRight,\n                            styles.cell,\n                            styles.textRight,\n                            { width: '33.33%' },\n                          ]}\n                        >\n                          {item.taux && item.taux * 100 + '%'}\n                        </Text>\n                        <Text\n                          style={[\n                            styles.borderRight,\n                            styles.cell,\n                            styles.textRight,\n                            { width: '33%' },\n                          ]}\n                        >\n                          {item.montant ? formatNumberWithSpaces(item.montant) : '-'}\n                        </Text>\n                      </View>\n                      <View style={[styles.row, { width: '50%' }]}>\n                        <Text style={[styles.borderRight, { width: '33.33%' }]}></Text>\n                        <Text style={[styles.borderRight, { width: '33.33%' }]}></Text>\n                        <Text style={[{ width: '33.33%' }]}></Text>\n                      </View>\n                    </View>\n                  </View>\n                </React.Fragment>\n              )\n            })}\n        </View>\n      </>\n    )\n  }\n  const Total = () => {\n    return (\n      <>\n        <View style={[styles.row, { width: '100%' }]}>\n          <View\n            style={[styles.borderRight, styles.row, styles.borderBottom, { width: '35%' }]}\n          ></View>\n          <View style={[styles.row, { width: '65%' }]}>\n            <View style={[styles.row, { width: '50%' }]}>\n              <View style={[styles.col, { width: '33.33%' }]}></View>\n              <View style={[styles.col, styles.borderRight, { width: '33.33%' }]}></View>\n              <View style={[styles.col, styles.borderBottom, styles.borderRight, { width: '33%' }]}>\n                <Text style={[styles.textRight, styles.cell, styles.row, styles.sousTotal, {}]}>\n                  {totalRetenues && formatNumberWithSpaces(totalRetenues)}\n                </Text>\n              </View>\n            </View>\n            <View style={[styles.row, { width: '50%' }]}>\n              <View style={[styles.col, { width: '33.33%' }]}></View>\n              <View style={[styles.col, styles.borderRight, { width: '33.33%' }]}></View>\n              <View style={[styles.col, styles.borderBottom, { width: '33%' }]}>\n                <Text\n                  style={[\n                    styles.textRight,\n                    styles.cell,\n                    {\n                      fontSize: 9,\n                      fontFamily: 'Roboto',\n                      fontWeight: 'bold',\n                    },\n                  ]}\n                >\n                  {totalIndemnite && formatNumberWithSpaces(totalIndemnite)}\n                </Text>\n              </View>\n            </View>\n          </View>\n        </View>\n      </>\n    )\n  }\n\n  const Divider = () => {\n    return (\n      <>\n        <View\n          style={[styles.row, styles.borderTop, styles.cell, { width: '100%', marginTop: 5 }]}\n        ></View>\n      </>\n    )\n  }\n\n  const FooterSalaireNet = () => {\n    return (\n      <>\n        <View style={[styles.row, styles.borderTop, { width: '100%' }]}>\n          <View style={[styles.row, styles.borderRight, { width: '56.66%' }]}></View>\n          <View\n            style={[styles.row, styles.justifyBetween, styles.borderBottom, { width: '43.44%' }]}\n          >\n            <View style={[{ width: '50%' }]}>\n              <Text\n                style={[\n                  styles.cell,\n                  styles.textMedium,\n                  { paddingLeft: 4, paddingBottom: 1, fontSize: 11 },\n                ]}\n              >\n                Salaire net\n              </Text>\n            </View>\n            <View style={[{ width: '50%' }]}>\n              <Text\n                style={[\n                  styles.cell,\n                  styles.textRight,\n                  styles.textMedium,\n                  { paddingBottom: 1, fontSize: 11 },\n                ]}\n              >\n                {salaireNet && formatNumberWithSpaces(salaireNet)}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </>\n    )\n  }\n\n  const FooterAvance = () => {\n    return (\n      <>\n        <View style={[styles.row, { width: '100%' }]}>\n          <View style={[styles.row, { width: '56.66%' }]}></View>\n          <View style={[styles.row, styles.justifyBetween, { width: '43.44%' }]}>\n            <View style={[{ width: '50%' }]}>\n              <Text style={[styles.cell, styles.textMedium, { paddingLeft: 4, fontSize: 11 }]}>\n                Avance sur salaire\n              </Text>\n            </View>\n            <View style={[{ width: '50%', fontSize: 11 }]}>\n              <Text style={[styles.cell, styles.textRight, styles.textMedium, {}]}>\n                {avance && formatNumberWithSpaces(avance)}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </>\n    )\n  }\n\n  const FooterNetAPayer = () => {\n    return (\n      <>\n        <View style={[styles.row, { width: '100%' }]}>\n          <View style={[styles.row, { width: '56.66%' }]}>\n            <Text\n              style={[\n                styles.cell,\n                styles.textBoldItalic,\n                {\n                  paddingLeft: 2,\n                  fontSize: 9,\n\n                  paddingBottom: 2,\n                  alignItems: 'baseline',\n                },\n              ]}\n            >\n              Payé par virement bancaire le : {dateVirement}\n            </Text>\n          </View>\n          <View\n            style={[\n              styles.row,\n              styles.justifyBetween,\n              styles.textBold,\n              { width: '43.44%', fontSize: 12 },\n            ]}\n          >\n            <View style={[{ width: '50%' }]}>\n              <Text style={[styles.cell, { paddingLeft: 4 }]}>Net à payer</Text>\n            </View>\n            <View style={[{ width: '50%', fontSize: 11 }]}>\n              <Text style={[styles.cell, styles.textRight, {}]}>\n                {salaireNetAPayer && formatNumberWithSpaces(salaireNetAPayer)}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </>\n    )\n  }\n\n  const Avertisement = () => {\n    return (\n      <>\n        <View style={[styles.borderBottom, styles.borderTop, { width: '100%', marginTop: 40 }]}>\n          <Text style={[styles.textBoldItalic, { textAlign: 'center', fontSize: 12 }]}>\n            A CONSERVER SANS LIMITATION DE DUREE\n          </Text>\n        </View>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <View>\n        <Header />\n        <Indemnites />\n        <Retenues />\n        <Total />\n        <View style={[{ marginTop: 5 }]}>\n          <Divider />\n        </View>\n        <Divider />\n        <FooterSalaireNet />\n        <FooterAvance />\n        <FooterNetAPayer />\n        <Avertisement />\n      </View>\n    </>\n  )\n}\n\nSection3.propTypes = {\n  salarie: PropTypes.object,\n  data: PropTypes.object,\n}\n","import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Document, PDFViewer, pdf, Page } from '@react-pdf/renderer'\nimport { PropTypes } from 'prop-types'\nimport { saveAs } from 'file-saver'\nimport Section1 from './Section1'\nimport Section2 from './Section2'\nimport Section3 from './Section3'\nimport { FolderArrowDownIcon } from '@heroicons/react/24/outline'\nimport { useNavigate } from 'react-router-dom'\n\n// Create Document Component\nconst MyDocument = ({ salarie, bulletinDePaie }) => {\n  return (\n    <Document\n      title={`Bulletin de paie ${bulletinDePaie.salarie.nom} ${bulletinDePaie.salarie.prenom}`}\n    >\n      <Page size=\"A4\">\n        <Section1 data={bulletinDePaie} />\n        <Section2 data={bulletinDePaie} />\n        <Section3 data={bulletinDePaie} />\n      </Page>\n    </Document>\n  )\n}\n\nMyDocument.propTypes = {\n  salarie: PropTypes.object,\n  bulletinDePaie: PropTypes.object,\n}\n\nconst BulletinPaie = () => {\n  const navigate = useNavigate()\n  const selectedEmploye = useSelector((state) => state.selectedEmploye.employe)\n  const bulletinDePaie = useSelector((state) => state.bulletinDePaie)\n  const salarie = useSelector((state) => state.bulletinDePaie.salarie)\n\n  useEffect(() => {\n    let mount = true\n    if (mount) {\n      if (Object.entries(bulletinDePaie.salarie).length <= 0) {\n        navigate('/', { replace: true })\n      }\n    }\n    return () => {\n      mount = false\n    }\n  }, [bulletinDePaie.salarie, navigate])\n\n  const handleclickDownload = () => {\n    const pdfBlob = pdf(<MyDocument salarie={selectedEmploye} bulletinDePaie={bulletinDePaie} />)\n      .toBlob()\n      .then((blob) => saveAs(blob, `${salarie.nom}_${salarie.prenom}.pdf`))\n  }\n\n  return (\n    <>\n      <div className=\"h-screen\">\n        <PDFViewer showToolbar={false} width=\"100%\" height=\"100%\">\n          <MyDocument salarie={salarie} bulletinDePaie={bulletinDePaie} />\n        </PDFViewer>\n      </div>\n      <div className=\"flex fixed top-[15%] right-0\">\n        <button type=\"button\" className=\"btn btn-primary p-1\" onClick={handleclickDownload}>\n          <span className=\"group flex flex-row items-center\">\n            <FolderArrowDownIcon className=\"w-6 h-6\" />\n            <span className=\"ml-2 hidden group-hover:flex capitalize\">Valider et télécharger</span>\n          </span>\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default BulletinPaie\n"],"names":["registerFonts","Font","register","family","fonts","src","RobotoRegular","RobotoItalic","fontStyle","RobotoBold","fontWeight","RobotoMedium","RobotoBoldItalic","styles","StyleSheet","create","table","display","row","flexDirection","col","borderRight","borderBottom","borderTop","header","fontSize","justifyContent","textTransform","alignItems","paddingTop","paddingBottom","subTitle","textAlign","paddingLeft","cell","paddingRight","textRight","sousTotal","fontFamily","textBold","textMedium","justifyBetween","textBoldItalic","props","dateSelectionne","data","nomEmployeur","employeur","nom","addresseEmployeur","adresse","CP_et_VilleEmployeur","CP_et_Ville","nif","stat","rcs","nomPrenomSalarie","salarie","prenomSalarie","prenom","fonction","poste","numMatriculSalarie","matricule","catSalarie","cat","Line","_ref","label","value","valueBold","marginBottom","_jsxs","View","style","width","children","_jsx","Text","padding","Employeur","_Fragment","Salarie","concat","number","Number","toFixed","replace","border","tableRow","tableCell","tableCell50","tableCell15","bordered","borderStyle","borderWidth","salaireBase","formatNumberWithSpaces","valHs30","valHs50","salaireBrut","plafondSME","marginTop","Section3","setDefaultOptions","locale","fr","indemnites","ajoutSalaire","flat","retenues","retenuSalaire","totalRetenues","totalDeduction","baseIrsaArrondi","cnaps","totalIndemnite","totalPrimeEtAvantage","salaireNet","avance","salaireNetAPayer","dateVirement","format","Date","Header","Indemnites","length","map","item","key","React","base","taux","montant","Retenues","Total","Divider","FooterSalaireNet","FooterAvance","FooterNetAPayer","Avertisement","MyDocument","bulletinDePaie","Document","title","Page","size","Section1","Section2","BulletinPaie","navigate","useNavigate","selectedEmploye","useSelector","state","employe","useEffect","mount","Object","entries","className","PDFViewer","showToolbar","height","type","onClick","handleclickDownload","pdf","toBlob","then","blob","saveAs","FolderArrowDownIcon"],"sourceRoot":""}