{"version":3,"file":"static/js/1703.80ab3cbf.chunk.js","mappings":"0SAiBA,MA2LA,EA3LsDA,IAA6C,IAA5C,KAAEC,EAAI,WAAEC,EAAU,iBAAEC,GAAkBH,EAC3F,MAAMI,GAAeC,EAAAA,EAAAA,OACdC,EAAcC,GAAmBC,EAAAA,SAAe,IAEjDC,GAAUC,EAAAA,EAAAA,UACd,IAAM,CACJN,EAAaO,SAAS,KAAM,CAC1BC,KAAOC,IACL,MAAMC,EAAYD,EAAKE,WACvB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCC,SAAA,EAClDC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLC,KAAK,KACLC,QAAST,EAAKU,IAAIC,gBAClBC,SAAUZ,EAAKU,IAAIG,8BAErBP,EAAAA,EAAAA,KAAA,SAAOF,UAAU,kBAAkBU,QAAQ,KAAIT,SAC5CJ,MAEC,EAIVc,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChBV,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACLC,KAAK,gBACLC,QAASQ,EAAMC,uBACfN,SAAUK,EAAME,qCAElBb,EAAAA,EAAAA,KAAA,SAAOF,UAAU,kBAAkBU,QAAQ,gBAAeT,SAAC,WAIzD,IAGVd,EAAaO,SAAS,YAAa,CACjCC,KAAOC,GAASA,EAAKE,WACrBa,OAAQA,IAAM,cAEhBxB,EAAaO,SAAS,WAAY,CAChCC,KAAOC,GAASA,EAAKE,WACrBa,OAAQA,IAAM,qBAEhBxB,EAAaO,SAAS,cAAe,CACnCC,KAAOC,GAASA,EAAKE,WACrBa,OAAQA,IAAM,aAEhBxB,EAAaO,SAAS,UAAW,CAC/BC,KAAOC,IACL,MAAMoB,EAAsBpB,EAAKU,IAAIW,SAC/BC,EAAUF,EAAeE,QAAUF,EAAeE,QAAU,GAElE,OACEhB,EAAAA,EAAAA,KAAA,OAAAD,SACGiB,EAAQC,KAAI,CAACC,EAAiDC,KAC7DnB,EAAAA,EAAAA,KAACkB,EAAe,CAAyBE,MAAQ1B,EAAKU,IAAYW,SAASM,IAAG,UAAAC,OAA9CH,OAE9B,EAGVV,OAAQA,IAAM,cAGlB,CAACxB,IAGG0B,GAAQY,EAAAA,EAAAA,IAAc,CAC1BzC,OACAQ,UACAkC,MAAO,CAAErC,gBACTsC,qBAAsBrC,EACtBsC,iBAAiBA,EAAAA,EAAAA,MACjBC,qBAAqBA,EAAAA,EAAAA,QAGjBC,EAAejB,EAAMkB,kBACrBC,EAAOnB,EAAMoB,cAAcD,KAEjC,OACEjC,EAAAA,EAAAA,MAAAmC,EAAAA,SAAA,CAAAjC,SAAA,CACGhB,IACCiB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCC,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,UAASC,SAAEhB,OAE3BiB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACiC,EAAAA,cAAa,CACZC,MAAO/C,GAAgB,GACvBmB,SAAW6B,IACT,MAAMD,EAAQC,EAAEC,OAAOF,MACvB9C,EAAgBiD,OAAOH,IACvBI,QAAQC,IAAIpD,EAAa,EAE3BW,UAAU,MACV0C,YAAY,qBAIlBxC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0BAAyBC,SAAEf,UAKhDgB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,qBAAoBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,sCAAqCC,SACnD6B,EAAaa,OAAS,GACrBb,EAAaX,KAAI,CAACyB,EAAaC,KAC7B3C,EAAAA,EAAAA,KAACX,EAAAA,SAAc,CAAAU,UACbF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACG2C,EAAYE,QAAQ3B,KAAI,CAACR,EAAQoC,IACA,YAA5BpC,EAAOY,GAAGyB,cAAoC,IAGhD9C,EAAAA,EAAAA,KAACX,EAAAA,SAAc,CAAAU,SACS,YAArBU,EAAOsC,OAAO1B,KACbrB,EAAAA,EAAAA,KAAA,MACEgD,MAAM,MACNlD,UAAU,YAAWC,SAGpBU,EAAOwC,cACJ,KAC0C,oBAAnCxC,EAAOsC,OAAOG,UAAUzC,OAC/BA,EAAOsC,OAAOG,UAAUzC,OAAOA,EAAO0C,cACtC,MAAI,UAAA7B,OANOb,EAAOY,GAAE,KAAAC,OAAIuB,KAQ/B,UAAAvB,OAb4Bb,EAAOY,GAAE,KAAAC,OAAIuB,MAiB/Cf,EAAKW,OAAS,GAAMX,EAAK,GAAWf,SAASC,UAC5ChB,EAAAA,EAAAA,KAAA,MAAIgD,MAAM,MAAMlD,UAAU,YAAWC,SAAC,cAGvC,aAAAuB,OA1BmBqB,KA2BjB,eAAArB,OA5B6BqB,SAiC1C3C,EAAAA,EAAAA,KAAA,SAAAD,SACG+B,EAAKW,OAAS,EACbX,EAAKb,KAAI,CAACb,EAAKgD,KACbpD,EAAAA,EAAAA,KAAA,MAEEF,UAAS,iCAAAwB,OACP8B,EAAW,IAAM,EAAI,WAAa,eACjCrD,SAEFK,EAAIiD,kBAAkBpC,KAAI,CAACxB,EAAM6D,IACI,YAAhC7D,EAAK0D,aAAaJ,OAAO1B,IAAqB5B,EAAKG,YAGrDI,EAAAA,EAAAA,KAAA,MAA0CF,UAAU,oBAAmBC,SAC9B,oBAA/BN,EAAKsD,OAAOG,UAAUzD,KAC1BA,EAAKsD,OAAOG,UAAUzD,KAAKA,EAAK0D,cAChC1D,EAAKsD,OAAOG,UAAUzD,MAAI,QAAA6B,OAHf8B,EAAQ,KAAA9B,OAAIgC,IAH2C,QAS1E,OAAAhC,OAfU8B,OAmBhBpD,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MACEuD,QAAS3B,EAAa,GAAGgB,QAAQH,OACjC3C,UAAU,mCAAkCC,SAC7C,2CAQV,E,wBCzIP,QAlDA,SAA0BlB,GAAsD,IAArD,QAAEmC,GAAmCnC,EAC9D,MAAMC,GAAO0E,EAAAA,EAAAA,KAAahC,GAAeA,EAAMiC,cAAcC,OAUvDC,EACJ7E,GAAQA,EAAK2D,OAAS,EAClB3D,EAAKmC,KAAK2C,IAAS,IACdA,EACHC,SAAS,GAADvC,OAAKsC,EAAKE,IAAG,KAAAxC,OAAIsC,EAAKG,QAC9B/C,QAASA,MAEX,GAOAgD,EAA6BA,KAE/BhE,EAAAA,EAAAA,KAAAgC,EAAAA,SAAA,CAAAjC,UACEF,EAAAA,EAAAA,MAACoE,EAAAA,GAAI,CACHC,GAAG,mBACHpE,UAAU,uEAAsEC,SAAA,EAEhFC,EAAAA,EAAAA,KAACmE,EAAAA,EAAQ,CAACC,MAAO,GAAIC,OAAQ,MAC7BrE,EAAAA,EAAAA,KAAA,QAAAD,SAAM,iBAMd,OACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACsE,EAAgB,CACfxF,KAAM6E,EACN5E,WAAW,wBACXC,kBAAkBgB,EAAAA,EAAAA,KAACgE,EAAgB,OAI3C,ECRA,EApCaO,KACX,MAAMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACR,IAAIC,GAAQ,EASZ,OARIA,GAASH,IACXA,GAASI,EAAAA,EAAAA,MACTJ,GAASK,EAAAA,EAAAA,OACTL,GAASM,EAAAA,EAAAA,OACTN,GAASO,EAAAA,EAAAA,IAAkB,CAAEC,aAAc,MAC3CR,GAASO,EAAAA,EAAAA,IAAkB,CAAEE,cAAe,MAC5CT,GAASU,EAAAA,EAAAA,OAEJ,KACLP,GAAQ,CAAK,CACd,GACA,CAACH,IAYJ,OACExE,EAAAA,EAAAA,KAAAgC,EAAAA,SAAA,CAAAjC,UAEEC,EAAAA,EAAAA,KAACmF,EAAiB,CAACnE,QAAS,CAbkBnC,IAAgB,IAAf,MAAEuC,GAAOvC,EAC1D,OACEmB,EAAAA,EAAAA,KAAAgC,EAAAA,SAAA,CAAAjC,UACEC,EAAAA,EAAAA,KAACiE,EAAAA,GAAI,CAACnE,UAAU,6BAA6BoE,GAAE,oBAAA5C,OAAsBF,GAAQrB,SAAC,WAG7E,MAQF,C","sources":["components/TableListeEmploye/DataTableEmploye.tsx","components/TableListeEmploye/TableListeEmploye.tsx","views/employee/list/List.tsx"],"sourcesContent":["import React, { useMemo } from 'react'\nimport {\n  createColumnHelper,\n  getCoreRowModel,\n  getFilteredRowModel,\n  useReactTable,\n} from '@tanstack/react-table'\nimport CustomPagination from '../CustomPagination'\nimport { IDataTableEmploye } from './interfaceDataTableEmploy'\nimport TableHead from './TableHead'\n\nimport { DebounceInput } from 'react-debounce-input'\n\ninterface ActionComponentProps {\n  rowId: any\n}\n// test\nconst DataTableEmploye: React.FC<IDataTableEmploye> = ({ data, tableTitle, headerComponents }) => {\n  const columnHelper = createColumnHelper()\n  const [globalFilter, setGlobalFilter] = React.useState('')\n\n  const columns = useMemo(\n    () => [\n      columnHelper.accessor('id', {\n        cell: (info) => {\n          const cellValue = info.getValue() as string\n          return (\n            <div className=\"px-6 py-3 justify-center flex gap-2\">\n              <input\n                type=\"checkbox\"\n                name=\"id\"\n                checked={info.row.getIsSelected()}\n                onChange={info.row.getToggleSelectedHandler()}\n              />\n              <label className=\"visually-hidden\" htmlFor=\"id\">\n                {cellValue}\n              </label>\n            </div>\n          )\n        },\n\n        header: ({ table }) => (\n          <div>\n            <div className=\"flex gap-2 justify-center\">\n              <input\n                type=\"checkbox\"\n                name=\"matriculeHead\"\n                checked={table.getIsAllRowsSelected()}\n                onChange={table.getToggleAllRowsSelectedHandler()}\n              />\n              <label className=\"visually-hidden\" htmlFor=\"matriculeHead\">\n                id\n              </label>\n            </div>\n          </div>\n        ),\n      }),\n      columnHelper.accessor('matricule', {\n        cell: (info) => info.getValue(),\n        header: () => 'Matricule',\n      }),\n      columnHelper.accessor('fullName', {\n        cell: (info) => info.getValue(),\n        header: () => 'Nom et prÃ©nom',\n      }),\n      columnHelper.accessor('titre_poste', {\n        cell: (info) => info.getValue(),\n        header: () => 'Fonction',\n      }),\n      columnHelper.accessor('actions', {\n        cell: (info) => {\n          const actionOriginal: any = info.row.original\n          const actions = actionOriginal.actions ? actionOriginal.actions : []\n\n          return (\n            <div>\n              {actions.map((ActionComponent: React.FC<ActionComponentProps>, index: number) => (\n                <ActionComponent key={`action_${index}`} rowId={(info.row as any).original.id} />\n              ))}\n            </div>\n          )\n        },\n        header: () => 'Actions',\n      }),\n    ],\n    [columnHelper],\n  )\n\n  const table = useReactTable({\n    data,\n    columns,\n    state: { globalFilter },\n    onGlobalFilterChange: setGlobalFilter,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n  })\n\n  const headerGroups = table.getHeaderGroups()\n  const rows = table.getRowModel().rows\n\n  return (\n    <>\n      {tableTitle && (\n        <div className=\"w-full my-2\">\n          <div className=\"flex gap-2 items-center\">\n            <div className=\"flex gap-3 w-full justify-start\">\n              <div>\n                <h1 className=\"text-lg\">{tableTitle}</h1>\n              </div>\n              <div>\n                <DebounceInput\n                  value={globalFilter || ''}\n                  onChange={(e) => {\n                    const value = e.target.value\n                    setGlobalFilter(String(value))\n                    console.log(globalFilter)\n                  }}\n                  className=\"p-1\"\n                  placeholder=\"Rechercher\"\n                />\n              </div>\n            </div>\n            <div className=\"flex justify-end w-full\">{headerComponents}</div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"overflow-x-auto w-full\">\n        <table className=\"w-full table-auto \">\n          <thead className=\"text-sm uppercase  bg-customRed-100\">\n            {headerGroups.length > 0 &&\n              headerGroups.map((headerGroup, key) => (\n                <React.Fragment key={`headerGroup_${key}`}>\n                  <tr key={`headerRow_${key}`}>\n                    {headerGroup.headers.map((header, headerIndex) => {\n                      if (header.id.toLowerCase() === 'actions') return ''\n\n                      return (\n                        <React.Fragment key={`header_${header.id}_${headerIndex}`}>\n                          {header.column.id !== 'Actions' && (\n                            <th\n                              scope=\"col\"\n                              className=\"px-6 py-3\"\n                              key={`header_${header.id}_${headerIndex}`}\n                            >\n                              {header.isPlaceholder\n                                ? null\n                                : typeof header.column.columnDef.header === 'function'\n                                ? header.column.columnDef.header(header.getContext())\n                                : null}\n                            </th>\n                          )}\n                        </React.Fragment>\n                      )\n                    })}\n                    {rows.length > 0 && (rows[0] as any).original.actions && (\n                      <th scope=\"col\" className=\"px-6 py-3\">\n                        Actions\n                      </th>\n                    )}\n                  </tr>\n                </React.Fragment>\n              ))}\n          </thead>\n\n          <tbody>\n            {rows.length > 0 ? (\n              rows.map((row, rowIndex) => (\n                <tr\n                  key={`row_${rowIndex}`}\n                  className={`border-y border-customRed-100 ${\n                    rowIndex % 2 === 0 ? 'bg-white' : 'bg-gray-200'\n                  }`}\n                >\n                  {row.getVisibleCells().map((cell, cellIndex) => {\n                    if (cell.getContext().column.id === 'actions' && !cell.getValue()) return null\n\n                    return (\n                      <td key={`cell_${rowIndex}_${cellIndex}`} className=\"px-6 py-2 text-sm\">\n                        {typeof cell.column.columnDef.cell === 'function'\n                          ? cell.column.columnDef.cell(cell.getContext())\n                          : cell.column.columnDef.cell}\n                      </td>\n                    )\n                  })}\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td\n                  colSpan={headerGroups[0].headers.length}\n                  className=\"text-lg font-medium p-4 bg-white\"\n                >\n                  Aucune donnÃ©e trouvÃ©e\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </>\n  )\n}\n\nexport default DataTableEmploye\n","import React, { Children } from 'react'\nimport DataTableEmploye from '@components/TableListeEmploye/DataTableEmploye'\nimport { useSelector } from 'react-redux'\nimport { IEmploye } from '@src/interfaces/interfaceEmploye'\nimport ButtonWithIcon from '@components/ButtonWithIcon'\nimport TableHead from './TableHead'\nimport { PlusIcon } from '@heroicons/react/24/outline'\nimport { Link } from 'react-router-dom'\n\ninterface IDataWithActions extends IEmploye {\n  actions?: React.FC[]\n}\n\nfunction TableListeEmploye({ actions }: { actions?: React.FC[] }): JSX.Element {\n  const data = useSelector((state: any) => state.employeesList.list)\n\n  /**\n   * Pour assurer la stabilitÃ© des donnÃ©es dans la table,\n   * il est nÃ©cessaire d'isoler les donnÃ©es Ã  envoyer en les formatant\n   * en dehors du composant TableEmployeeDataTable.\n   * @tanstack/react-table ne gÃ¨re pas efficacement les changements frÃ©quents d'Ã©tat.\n   * Ainsi, les donnÃ©es sont formatÃ©es une fois et transmises en tant que propriÃ©tÃ©s (props)\n   * pour maintenir la constance des donnÃ©es Ã  l'intÃ©rieur de la table.\n   */\n  const formattedData: IDataWithActions[] =\n    data && data.length > 0\n      ? data.map((item: any) => ({\n          ...item,\n          fullName: `${item.nom} ${item.prenom}`,\n          actions: actions,\n        }))\n      : []\n\n  const handleClickAjout = (ev: React.MouseEvent<HTMLButtonElement>) => {\n    ev.preventDefault()\n    console.log('add clicked')\n  }\n\n  const HeaderComponents: React.FC = () => {\n    return (\n      <>\n        <Link\n          to=\"/ajouter-employe\"\n          className=\"bg-customRed-900 flex flex-col justify-between text-white px-4 py-2 \"\n        >\n          <PlusIcon width={20} height={20} />\n          <span>Ajouter</span>\n        </Link>\n      </>\n    )\n  }\n\n  return (\n    <div>\n      <DataTableEmploye\n        data={formattedData}\n        tableTitle=\"Liste des employÃ©s\"\n        headerComponents={<HeaderComponents />}\n      />\n    </div>\n  )\n}\n\nexport default TableListeEmploye\n","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport TableEmployee from 'src/components/TableEmployee/TableEmployee'\nimport { fetchAllEmployees } from 'src/redux/employees/employeesAction'\nimport {\n  resetBulletinDePaie,\n  setBulletinDePaie,\n} from 'src/redux/bulletinDePaie/bulletinDePaieReducer'\nimport { resetParametreCalendrier } from 'src/redux/parametreCalendrier/parametreCalendrierReducer'\nimport { fetchAllMouvementSalaire } from 'src/redux/mouvementSalaire/mouvementSalaireAction'\nimport TableListeEmploye from '@components/TableListeEmploye/TableListeEmploye'\nimport { Link } from 'react-router-dom'\n\ninterface ButtonDetailProps {\n  rowId: number\n}\n\nconst List = () => {\n  const dispatch = useDispatch<any>()\n\n  useEffect(() => {\n    let mount = true\n    if (mount && dispatch) {\n      dispatch(fetchAllEmployees())\n      dispatch(resetBulletinDePaie())\n      dispatch(resetParametreCalendrier())\n      dispatch(setBulletinDePaie({ ajoutSalaire: [] }))\n      dispatch(setBulletinDePaie({ retenuSalaire: [] }))\n      dispatch(fetchAllMouvementSalaire())\n    }\n    return () => {\n      mount = false\n    }\n  }, [dispatch])\n\n  const ButtonDetail: React.FC<ButtonDetailProps> = ({ rowId }) => {\n    return (\n      <>\n        <Link className=\"btn btn-danger py-1 px-1.5\" to={`/employees/fiche/${rowId}`}>\n          Fiche\n        </Link>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {/* <TableEmployee /> */}\n      <TableListeEmploye actions={[ButtonDetail]} />\n    </>\n  )\n}\n\nexport default List\n"],"names":["_ref","data","tableTitle","headerComponents","columnHelper","createColumnHelper","globalFilter","setGlobalFilter","React","columns","useMemo","accessor","cell","info","cellValue","getValue","_jsxs","className","children","_jsx","type","name","checked","row","getIsSelected","onChange","getToggleSelectedHandler","htmlFor","header","_ref2","table","getIsAllRowsSelected","getToggleAllRowsSelectedHandler","actionOriginal","original","actions","map","ActionComponent","index","rowId","id","concat","useReactTable","state","onGlobalFilterChange","getCoreRowModel","getFilteredRowModel","headerGroups","getHeaderGroups","rows","getRowModel","_Fragment","DebounceInput","value","e","target","String","console","log","placeholder","length","headerGroup","key","headers","headerIndex","toLowerCase","column","scope","isPlaceholder","columnDef","getContext","rowIndex","getVisibleCells","cellIndex","colSpan","useSelector","employeesList","list","formattedData","item","fullName","nom","prenom","HeaderComponents","Link","to","PlusIcon","width","height","DataTableEmploye","List","dispatch","useDispatch","useEffect","mount","fetchAllEmployees","resetBulletinDePaie","resetParametreCalendrier","setBulletinDePaie","ajoutSalaire","retenuSalaire","fetchAllMouvementSalaire","TableListeEmploye"],"sourceRoot":""}