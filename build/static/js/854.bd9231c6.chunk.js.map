{"version":3,"file":"static/js/854.bd9231c6.chunk.js","mappings":"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","sources":["components/CustomSection.jsx","scss/selectCustomStyles.js","views/etats_divers/declarationCnaps/EmployerWorksheet.js","views/etats_divers/declarationCnaps/MonthWorksheet.js","views/etats_divers/declarationCnaps/DnsGenerator.jsx","views/etats_divers/declarationCnaps/DeclarationCnaps.jsx"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst CustomSection = (props) => {\n  return (\n    <>\n      <div\n        className={` ${\n          props.fullWidth ? 'w-full' : null\n        } inline-flex flex-col border-b border-customRed-900 shadow-lg`}\n      >\n        <div className=\"flex flex-row flex-wrap gap-4 px-4 py-2 text-white bg-customRed-900\">\n          <h2 className=\"text-2xl font-semibold mb-2 capitalize\">{props.title}</h2>\n        </div>\n        <div className=\"bg-white flex w-full\">{props.body}</div>\n      </div>\n    </>\n  )\n}\nCustomSection.propTypes = {\n  title: PropTypes.string,\n  body: PropTypes.any,\n  fullWidth: PropTypes.bool,\n}\nexport default CustomSection\n","export const selectCustomStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    borderColor: state.isFocused ? '#da200d' : '',\n    boxShadow: state.isFocused ? '0 0 0 0.25rem #e7b7b4' : null,\n    borderRadius: 0,\n  }),\n\n  container: (provided) => ({\n    ...provided,\n    width: '100%',\n  }),\n  menu: (provided, state) => ({\n    ...provided,\n    width: '100%',\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: state.isSelected ? '#da200d' : 'inherit',\n    ':hover': {\n      backgroundColor: '#e7b7b4',\n    },\n  }),\n}\n","class EmployerWorksheet {\n  constructor(workbook) {\n    this.employeurData = null\n    this.period = null\n    this.periodSelectionne = null\n\n    this.worksheet = workbook.addWorksheet('EMPLOYER', {\n      properties: { tabColor: { argb: '00CCFF' } },\n    })\n\n    this.colA = this.worksheet.getColumn(1)\n    this.colB = this.worksheet.getColumn(2)\n    this.CellB30 = this.worksheet.getCell('B30')\n    this.row18 = this.worksheet.getRow(18)\n    this.row21 = this.worksheet.getRow(21)\n    this.f22 = this.worksheet.getCell('F22')\n    this.f23 = this.worksheet.getCell('F23')\n    this.f24 = this.worksheet.getCell('F24')\n    this.f25 = this.worksheet.getCell('F25')\n    this.f26 = this.worksheet.getCell('F26')\n\n    // this.createSheetContent()\n  }\n\n  setPeriodeSelectionne(periodSelectionne) {\n    this.periodSelectionne = periodSelectionne\n  }\n\n  setEmployeurData(employeurData) {\n    this.employeurData = employeurData\n  }\n\n  setPeriod(period) {\n    this.period = period\n  }\n\n  setDefaultFont() {\n    this.worksheet.eachRow((row, rowNum) => {\n      row.eachCell((cell, colNum) => {\n        if (cell.value) {\n          row.getCell(colNum).font = { name: 'Arial', size: 10 }\n        }\n      })\n    })\n  }\n\n  isEmployeurExist() {\n    return this.employeurData !== null && this.employeurData !== undefined\n  }\n\n  verifyCellNotMerged(cell1, cell2) {\n    return this.worksheet.getCell(cell1).style !== this.worksheet.getCell(cell2).style\n  }\n\n  formatC4ToC9() {\n    for (let i = 4; i <= 9; i++) {\n      if (this.verifyCellNotMerged(`C${i}`, `F${i}`)) {\n        this.worksheet.mergeCells(`C${i}:F${i}`)\n      }\n\n      if (this.isEmployeurExist()) {\n        if (i === 4) {\n          this.worksheet.getCell(`C${i}`).value = this.employeurData.rcs || null\n        }\n        if (i === 5) {\n          this.worksheet.getCell(`C${i}`).value = this.employeurData.nom || null\n        }\n        if (i === 6) {\n          this.worksheet.getCell(`C${i}`).value = this.employeurData.nif || null\n        }\n        if (i === 7) {\n          this.worksheet.getCell(`C${i}`).value = this.employeurData.tel || null\n        }\n        if (i === 8) {\n          this.worksheet.getCell(`C${i}`).value = this.employeurData.adresse || null\n        }\n        if (i === 9) {\n          this.worksheet.getCell(`C${i}`).value = this.employeurData.email || null\n        }\n      }\n      let colCDEF = this.worksheet.getColumn(i)\n      colCDEF.width = 17\n      this.worksheet.getCell(`C${i}`).border = {\n        top: { style: 'thin' },\n        left: { style: 'thin' },\n        bottom: { style: 'thin' },\n        right: { style: 'thin' },\n      }\n    }\n  }\n\n  isPeriodExist() {\n    return this.period !== null && this.period !== undefined\n  }\n  formatC12ToC16() {\n    for (let i = 12; i <= 16; i++) {\n      if (this.isPeriodExist()) {\n        if (i === 12 && this.period.length > 0) {\n          this.worksheet.getCell(`C${i}`).value = this.period\n        }\n      }\n\n      this.worksheet.getCell(`C${i}`).border = {\n        top: { style: 'thin' },\n        left: { style: 'thin' },\n        bottom: { style: 'thin' },\n        right: { style: 'thin' },\n      }\n    }\n  }\n  formatC18ToE18() {\n    for (let i = 3; i < 6; i++) {\n      this.row18.getCell(i).border = {\n        top: { style: 'thin' },\n        left: { style: 'thin' },\n        bottom: { style: 'thin' },\n        right: { style: 'thin' },\n      }\n    }\n  }\n  formatC21ToE21() {\n    for (let i = 3; i < 6; i++) {\n      this.row21.getCell(i).value = `Mois ${i - 2}`\n      this.row21.getCell(i).border = {\n        top: { style: 'thin' },\n        left: { style: 'thin' },\n        bottom: { style: 'thin' },\n        right: { style: 'thin' },\n      }\n      this.row21.getCell(i).font = { name: 'Arial', bold: true, size: 10 }\n      this.row21.getCell(i).alignment = { vertical: 'middle', horizontal: 'center' }\n    }\n  }\n  formatB22ToF25() {\n    for (let i = 22; i < 26; i++) {\n      let row = this.worksheet.getRow(i)\n      if (!row) {\n        row = this.worksheet.addRow({ number: i })\n      }\n\n      for (let c = 2; c <= 6; c++) {\n        row.getCell(c).border = {\n          top: { style: 'thin' },\n          left: { style: 'thin' },\n          bottom: { style: 'thin' },\n          right: { style: 'thin' },\n        }\n      }\n    }\n  }\n  formatF22() {\n    this.f22.value = 'TOTAUX'\n    this.f22.font = { name: 'Arial', bold: true, size: 10 }\n    this.f22.alignment = { vertical: 'middle', horizontal: 'center' }\n  }\n  formatF26() {\n    this.f26.border = {\n      top: { style: 'thin' },\n      left: { style: 'thin' },\n      bottom: { style: 'thin' },\n      right: { style: 'thin' },\n    }\n  }\n  insertFormulaToF23() {\n    this.f23.value = { formula: 'SUM(C23,E23)' }\n  }\n  insertFormulaToF24() {\n    this.f24.value = { formula: 'SUM(C24:E24)' }\n  }\n  insertFormulaToF25() {\n    this.f25.value = { formula: 'SUM(C25:E25)' }\n  }\n  insertFormulaToF26() {\n    this.f26.value = { formula: 'SUM(F24:F25)' }\n  }\n\n  isPeriodeSelectionneT1() {\n    return this.periodSelectionne === 't1'\n  }\n\n  isPeriodeSelectionneT2() {\n    return this.periodSelectionne === 't2'\n  }\n  isPeriodeSelectionneT3() {\n    return this.periodSelectionne === 't3'\n  }\n\n  insertValueToC18ToE18() {\n    if (this.isPeriodeSelectionneT1()) {\n      this.worksheet.getCell('C18').value = 'Janvier'\n      this.worksheet.getCell('D18').value = 'Février'\n      this.worksheet.getCell('E18').value = 'Mars'\n    }\n    if (this.isPeriodeSelectionneT2()) {\n      this.worksheet.getCell('C18').value = 'Avril'\n      this.worksheet.getCell('D18').value = 'Mai'\n      this.worksheet.getCell('E18').value = 'Juin'\n    }\n    if (this.isPeriodeSelectionneT3()) {\n      this.worksheet.getCell('C18').value = 'Juillet'\n      this.worksheet.getCell('D18').value = 'Août'\n      this.worksheet.getCell('E18').value = 'Septembre'\n    }\n  }\n\n  createSheetContent() {\n    const colCWsEmployeur = this.worksheet.getColumn(3)\n    colCWsEmployeur.width = 17\n\n    // const this.colA = this.worksheet.getColumn(1)\n    this.colA.width = 5.5\n    this.colA.values = [\n      null,\n      \"RENSEIGNEMENTS SUR L'EMPLOYEUR :\",\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'COTISATIONS :',\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      'MOIS CONCERNES :',\n      null,\n      null,\n      'RECAPITULATION :',\n    ]\n\n    // const this.colB = this.worksheet.getColumn(2)\n    this.colB.width = 28.14\n    this.colB.values = [\n      null,\n      null,\n      null,\n      'N° MATRICULE',\n      'RAISON SOCIALE',\n      'N° NIF(nouveau)',\n      'N° Téléphone',\n      'ADRESSE',\n      'Adresse email',\n      null,\n      null,\n      'Période et Année',\n      'Mode de paiement',\n      'Référence',\n      'Taux Employeur',\n      'Taux Travailleur',\n      null,\n      null,\n      null,\n      null,\n      null,\n      'Effectif mensuel (OBLIGATOIRE)',\n      'Totaux Salaires non plafonnés',\n      'Cotisations Employeur',\n      'Cotisations travailleurs',\n      null,\n      null,\n      null,\n      null,\n      '** Reporter ci-dessus les totaux obtenus dans les onglets Mois 1, 2 et 3.',\n    ]\n    this.setDefaultFont()\n    this.formatC4ToC9()\n    this.formatC12ToC16()\n    this.formatC18ToE18()\n    this.formatC21ToE21()\n    this.formatB22ToF25()\n    this.formatF22()\n    this.formatF26()\n    this.insertFormulaToF23()\n    this.insertFormulaToF24()\n    this.insertFormulaToF25()\n    this.insertFormulaToF26()\n    this.insertValueToC18ToE18()\n\n    this.CellB30.font = { italic: true, bold: true }\n    this.colA.font = { name: 'Arial', bold: true, underline: true, size: 10 }\n  }\n}\n\nexport default EmployerWorksheet\n","import { parse, format } from 'date-fns'\nimport { fr } from 'date-fns/locale'\n\nclass MonthWorksheet {\n  constructor(workbook, monthLabel, tabColor) {\n    this.monthLabel = null\n    this.workbook = workbook\n    this.tabColor = null\n    this.travailleurData = null\n    this.formatedData = []\n    this.employeurData = null\n\n    this.startCharCode = 'A'.charCodeAt(0)\n    this.endCharCode = 'P'.charCodeAt(0)\n    this.columnNames = []\n    this.columnData = [\n      'date',\n      'nom',\n      'prenom',\n      'num_cnaps',\n      'ref_employeur',\n      'date_embauche',\n      'date_depart',\n      'salaire_du_mois',\n      'avantage_du_mois',\n      'temps_presence',\n      'non_plafonne',\n      'plafonne',\n      'taux_cotisation_cnaps_employeur',\n      'taux_cotisation_cnaps_salarie',\n      'cotisation_total',\n      'cin',\n    ]\n    this.generateColumnNames()\n\n    this.worksheet = workbook.addWorksheet(monthLabel, {\n      properties: { tabColor: { argb: tabColor } },\n    })\n  }\n\n  setTravailleurData(data) {\n    this.travailleurData = data\n  }\n\n  setEmployeurData(employeeHours) {\n    this.employeurData = employeeHours\n  }\n\n  isTravailleurDataExist() {\n    return this.travailleurData !== null && this.travailleurData !== undefined\n  }\n\n  isEmployeurDataExist() {\n    console.log(this.employeurData)\n    return this.employeurData !== null && this.employeurData !== undefined\n  }\n\n  formatDate(annee, mois) {\n    try {\n      const dateStr = `${annee}-${mois}-01`\n\n      const parsedDate = parse(dateStr, 'yyyy-MMMM-dd', new Date(), { locale: fr })\n\n      const formattedDate = `${parsedDate.getFullYear()}${(parsedDate.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}`\n\n      return formattedDate\n    } catch (error) {\n      console.error('Error formatting date:', error)\n      return ''\n    }\n  }\n\n  formatData() {\n    if (this.isTravailleurDataExist()) {\n      console.log(this.travailleurData)\n      this.formatedData = this.travailleurData.map((item, key) => {\n        const plafondReglemente = 1940000\n\n        return {\n          ...item,\n          date: this.formatDate(item.annee, item.mois),\n          date_embauche: item.date_embauche\n            ? format(new Date(item.date_embauche), 'dd/MM/yyyy')\n            : '',\n          date_depart: item.date_depart ? format(new Date(item.date_depart), 'dd/MM/yyyy') : '',\n          non_plafonne: { formula: `SUM(H${key + 3},I${key + 3})` },\n          plafonne: {\n            formula: `=IF(K${key + 3} <= ${plafondReglemente}, K${key + 3}, ${plafondReglemente})`,\n          },\n          cotisation_employeur: { formula: `${item.taux_cotisation_cnaps_employeur}*L${key + 3}` },\n          cotisaton_travailleur: { formula: `${item.taux_cotisation_cnaps_salarie}*L${key + 3}` },\n          cotisation_total: { formula: `M${key + 3}+N${key + 3}` },\n        }\n      })\n    } else {\n      console.log(\"Impossible de générer le contenu de l'onglet mois\")\n    }\n  }\n\n  generateColumnNames() {\n    for (let charCode = this.startCharCode; charCode <= this.endCharCode; charCode++) {\n      const columnName = String.fromCharCode(charCode)\n      this.columnNames.push(columnName)\n    }\n  }\n\n  fillCollData() {\n    for (let colIndex = 0; colIndex < this.columnNames.length; colIndex++) {\n      const colName = this.columnNames[colIndex]\n      const dataKey = this.columnData[colIndex]\n\n      for (let i = 0; i < this.formatedData.length; i++) {\n        const rowNumber = i + 3\n        this.worksheet.getCell(`${colName}${rowNumber}`).value = this.formatedData[i][dataKey]\n      }\n    }\n  }\n\n  injectData = () => {\n    if (this.isTravailleurDataExist()) {\n      this.formatData()\n      this.fillCollData()\n    } else {\n      console.log('no data')\n    }\n  }\n\n  initializeHeaders() {\n    this.A1 = this.worksheet.getCell('A1')\n    this.B1 = this.worksheet.getCell('B1')\n    this.B2 = this.worksheet.getCell('B2')\n    this.C2 = this.worksheet.getCell('C2')\n    this.D1 = this.worksheet.getCell('D1')\n    this.E1 = this.worksheet.getCell('E1')\n    this.F1 = this.worksheet.getCell('F1')\n    this.F2 = this.worksheet.getCell('F2')\n    this.G2 = this.worksheet.getCell('G2')\n    this.H1 = this.worksheet.getCell('H1')\n    this.I1 = this.worksheet.getCell('I1')\n    this.J1 = this.worksheet.getCell('J1')\n    this.K1 = this.worksheet.getCell('K1')\n    this.K2 = this.worksheet.getCell('K2')\n    this.L2 = this.worksheet.getCell('L2')\n    this.M1 = this.worksheet.getCell('M1')\n    this.M2 = this.worksheet.getCell('M2')\n    this.N2 = this.worksheet.getCell('N2')\n    this.O2 = this.worksheet.getCell('O2')\n    this.P1 = this.worksheet.getCell('P1')\n  }\n\n  verifyCellNotMerged(cell1, cell2) {\n    return this.worksheet.getCell(cell1).style !== this.worksheet.getCell(cell2).style\n  }\n\n  setLabel(monthLabel) {\n    this.monthLabel = monthLabel\n  }\n\n  setTabColor(tabColor) {\n    this.tabColor = tabColor\n  }\n\n  adjustColumnWidths() {\n    this.worksheet.columns.forEach((column, index) => {\n      let maxStringLength = 0\n      this.worksheet.eachRow({ includeEmpty: true }, (row) => {\n        const cellValue = row.getCell(index + 1).value\n        const cellLength = cellValue ? String(cellValue).length : 0\n        maxStringLength = Math.max(maxStringLength, cellLength)\n      })\n\n      column.width = Math.max(10, Math.min(30, maxStringLength + 2))\n    })\n  }\n\n  formatCellToNumberDecima() {\n    if (this.isTravailleurDataExist())\n      for (let i = 0; i <= this.formatedData.length; i++) {\n        const dataCell = i + 3\n        this.worksheet.getCell(`H${dataCell}`).numFmt = '0.00'\n        this.worksheet.getCell(`I${dataCell}`).numFmt = '0.00'\n        this.worksheet.getCell(`K${dataCell}`).numFmt = '0.00'\n        this.worksheet.getCell(`L${dataCell}`).numFmt = '0.00'\n        this.worksheet.getCell(`M${dataCell}`).numFmt = '0.00'\n        this.worksheet.getCell(`N${dataCell}`).numFmt = '0.00'\n        this.worksheet.getCell(`O${dataCell}`).numFmt = '0.00'\n      }\n  }\n\n  setDefaultFont() {\n    this.adjustColumnWidths()\n    this.worksheet.eachRow((row) => {\n      row.eachCell((cell) => {\n        cell.font = { name: 'Arial Narrow', size: 9 }\n        cell.alignment = { vertical: 'middle', horizontal: 'center' }\n        cell.border = {\n          top: { style: 'thin' },\n          left: { style: 'thin' },\n          bottom: { style: 'thin' },\n          right: { style: 'thin' },\n        }\n      })\n    })\n  }\n\n  formatA1() {\n    this.A1.width = '2.3cm'\n    this.A1.value = 'ANNEE-MOIS'\n    if (this.verifyCellNotMerged('A1', 'A2')) {\n      this.worksheet.mergeCells('A1:A2')\n    }\n  }\n  formatB1() {\n    this.B1.width = '6cm'\n    this.B1.value = 'TRAVAILLEURS'\n    if (this.verifyCellNotMerged('B1', 'C1')) {\n      this.worksheet.mergeCells('B1:C1')\n    }\n  }\n  formatB2() {\n    // this.B2.width = '6cm'\n    this.B2.value = 'NOM'\n  }\n  formatC2() {\n    this.C2.value = 'PRENOMS'\n  }\n  formatD1() {\n    this.D1.width = '2.3cm'\n    this.D1.value = 'N° CNaPS'\n    if (this.verifyCellNotMerged('D1', 'D2')) {\n      this.worksheet.mergeCells('D1:D2')\n    }\n  }\n  formatE1() {\n    this.E1.width = '2.3cm'\n    this.E1.value = 'Réf. Employeur'\n    if (this.verifyCellNotMerged('E1', 'E2')) {\n      this.worksheet.mergeCells('E1:E2')\n    }\n  }\n  formatF1() {\n    // this.F1.width = '2.3cm'\n    this.F1.value = 'DATE'\n    if (this.verifyCellNotMerged('F1', 'G1')) {\n      this.worksheet.mergeCells('F1:G1')\n    }\n  }\n  formatF2() {\n    // this.F2.width = '2.3cm'\n    this.F2.value = 'ENTREE'\n  }\n  formatG2() {\n    this.G2.value = 'DEPART'\n  }\n  formatH1() {\n    // this.H1.width = '2.3cm'\n    this.H1.value = 'SALAIRE DU MOIS'\n    if (this.verifyCellNotMerged('H1', 'H2')) {\n      this.worksheet.mergeCells('H1:H2')\n    }\n  }\n  formatI1() {\n    // this.I1.width = '2.3cm'\n    this.I1.value = 'AVANTAGE DU MOIS'\n    if (this.verifyCellNotMerged('I1', 'I2')) {\n      this.worksheet.mergeCells('I1:I2')\n    }\n  }\n  formatJ1() {\n    // this.J1.width = '2.3cm'\n    this.J1.value = 'TEMPS PRESENCE'\n    if (this.verifyCellNotMerged('J1', 'J2')) {\n      this.worksheet.mergeCells('J1:J2')\n    }\n  }\n  formatK1() {\n    // this.K1.width = '2.3cm'\n    this.K1.value = 'TOTAL'\n    if (this.verifyCellNotMerged('K1', 'L1')) {\n      this.worksheet.mergeCells('K1:L1')\n    }\n  }\n  formatK2() {\n    this.K2.value = 'NON PLAFONNE'\n    // this.K2.width = '2.3cm'\n  }\n  formatL2() {\n    this.L2.value = 'PLAFONNE'\n  }\n  formatM1() {\n    // this.M1.width = '2.3cm'\n    this.M1.value = 'COTISATIONS'\n    if (this.verifyCellNotMerged('M1', 'O1')) {\n      this.worksheet.mergeCells('M1:O1')\n    }\n  }\n  formatM2() {\n    this.M2.value = 'EMPLOYEUR'\n  }\n  formatN2() {\n    this.N2.value = 'TRAVAILLEUR'\n  }\n  formatO2() {\n    this.O2.value = 'TOTAL'\n  }\n  formatP1() {\n    // this.P1.width = '2.3cm'\n    this.P1.value = 'N° CIN/N°PASSEPORT'\n    if (this.verifyCellNotMerged('P1', 'P2')) {\n      this.worksheet.mergeCells('P1:P2')\n    }\n  }\n\n  createSheetContent() {\n    this.initializeHeaders()\n    this.formatA1()\n    this.formatB1()\n    this.formatB2()\n    this.formatC2()\n    this.formatD1()\n    this.formatE1()\n    this.formatF1()\n    this.formatF2()\n    this.formatG2()\n    this.formatH1()\n    this.formatI1()\n    this.formatJ1()\n    this.formatK1()\n    this.formatK2()\n    this.formatL2()\n    this.formatM1()\n    this.formatM2()\n    this.formatN2()\n    this.formatO2()\n    this.formatP1()\n    this.injectData()\n    this.formatCellToNumberDecima()\n    this.setDefaultFont()\n  }\n\n  clearAllCellValues() {\n    for (let i = 0; i < this.formatedData.length; i++) {\n      const rowNumber = i + 3\n\n      // Remove the entire row\n      this.worksheet.spliceRows(rowNumber, 1)\n\n      // Alternatively, if you want to remove only specific cells in the row, you can use splice on the row object\n      // const row = this.worksheet.getRow(rowNumber);\n      // row.splice(1, this.columnNames.length);\n      // row.commit(); // Commit the changes to the row\n    }\n  }\n\n  resetData = () => {\n    this.travailleurData = null\n    this.clearAllCellValues()\n  }\n}\n\nexport default MonthWorksheet\n","import React, { Component } from 'react'\nimport ExcelJS from 'exceljs'\nimport PropTypes from 'prop-types'\nimport { store } from 'src/redux/store'\nimport EmployerWorksheet from './EmployerWorksheet'\nimport MonthWorksheet from './MonthWorksheet'\nimport * as FileSaver from 'file-saver'\n\nclass DnsGenerator extends Component {\n  constructor(props) {\n    super(props)\n    this.wb = new ExcelJS.Workbook()\n\n    this.employeurSheet = new EmployerWorksheet(this.wb)\n    this.mois1WorkSheet = new MonthWorksheet(this.wb, 'Mois 1', 'ffff00')\n    this.mois2WorkSheet = new MonthWorksheet(this.wb, 'Mois 2', '99ccff')\n    this.mois3WorkSheet = new MonthWorksheet(this.wb, 'Mois 3', '00ccff')\n\n    this.mois1List = ['janvier', 'avril', 'juillet']\n    this.mois2List = ['fevrier', 'mai', 'août']\n    this.mois3List = ['mars', 'juin', 'septembre']\n\n    this.store = null\n    this.dnsData = null\n    this.listSalarie = null\n    this.employeurData = null\n\n    this.listSalarieMois1 = null\n    this.listSalarieMois2 = null\n    this.listSalarieMois3 = null\n\n    this.period = null\n    this.salaries = null\n\n    this.listSalarie = this.isDnsDataExist() ? this.dnsData[0].travailleurs : []\n\n    this.state = {\n      anneSelectionne: null,\n      periodeSelectionne: null,\n    }\n  }\n\n  isSalariesExist = () => {\n    return this.salaries !== undefined && this.salaries !== null\n  }\n\n  getListSalarieMois1 = () => {\n    this.listSalarieMois1 = []\n    if (this.isSalariesExist()) {\n      for (let i = 0; i < this.salaries.length; i++) {\n        if (\n          this.mois1List.includes(this.salaries[i].mois) &&\n          this.salaries[i].trimestre === this.store.dns.periodSelectionne\n        ) {\n          this.listSalarieMois1.push(this.salaries[i])\n        }\n      }\n    }\n  }\n\n  getListSalarieMois2 = () => {\n    this.listSalarieMois2 = []\n    if (this.isSalariesExist()) {\n      for (let i = 0; i < this.salaries.length; i++) {\n        if (\n          this.mois2List.includes(this.salaries[i].mois) &&\n          this.salaries[i].trimestre === this.store.dns.periodSelectionne\n        ) {\n          this.listSalarieMois2.push(this.salaries[i])\n        }\n      }\n    }\n  }\n\n  getListSalarieMois3 = () => {\n    this.listSalarieMois3 = []\n    if (this.isSalariesExist()) {\n      for (let i = 0; i < this.salaries.length; i++) {\n        if (\n          this.mois3List.includes(this.salaries[i].mois) &&\n          this.salaries[i].trimestre === this.store.dns.periodSelectionne\n        ) {\n          this.listSalarieMois3.push(this.salaries[i])\n        }\n      }\n    }\n  }\n\n  isDnsDataExist = () => {\n    return (\n      this.dnsData !== null && this.dnsData !== undefined && Array.from(this.dnsData).length > 0\n    )\n  }\n\n  componentDidMount() {\n    this.store = store.getState()\n    this.dnsData = this.isDnsDataExist() ? this.store.dns.dnsData : []\n    this.salaries = this.isDnsDataExist() ? this.dnsData[0].travailleurs : []\n    this.getListSalarieMois1(this.salaries)\n    this.getListSalarieMois2(this.salaries)\n    this.getListSalarieMois3(this.salaries)\n  }\n\n  componentDidUpdate() {\n    this.store = store.getState()\n    this.dnsData = this.store.dns.dnsData\n    this.salaries = this.isDnsDataExist() && this.dnsData[0].travailleurs\n    this.getListSalarieMois1(this.salaries)\n    this.getListSalarieMois2(this.salaries)\n    this.getListSalarieMois3(this.salaries)\n  }\n\n  formatPeriod() {\n    switch (this.store.dns.periodSelectionne) {\n      case 't1':\n        this.period = '01-' + this.store.dns.anneeSelectionne.toString()\n        break\n      case 't2':\n        this.period = '04-' + this.store.dns.anneeSelectionne.toString()\n        break\n      case 't3':\n        this.period = '07-' + this.store.dns.anneeSelectionne.toString()\n        break\n      default:\n        break\n    }\n  }\n\n  isEmployeurDataExist = () => {\n    return this.store.employeur.employeur !== null && this.store.employeur.employeur !== undefined\n  }\n\n  handleExport = async (ev) => {\n    ev.preventDefault()\n    this.store = store.getState()\n    this.formatPeriod()\n\n    this.employeurData = this.isEmployeurDataExist() ? this.store.employeur.employeur : []\n\n    if (this.listSalarieMois1) {\n      this.mois1WorkSheet.setTravailleurData(this.listSalarieMois1)\n      this.mois1WorkSheet.createSheetContent()\n    }\n\n    if (this.listSalarieMois2) {\n      this.mois2WorkSheet.setTravailleurData(this.listSalarieMois2)\n      this.mois2WorkSheet.createSheetContent()\n    }\n\n    if (this.listSalarieMois3) {\n      this.mois3WorkSheet.setTravailleurData(this.listSalarieMois3)\n      this.mois3WorkSheet.createSheetContent()\n    }\n\n    if (this.period) {\n      this.employeurSheet.setPeriod(this.period)\n    }\n\n    if (this.isEmployeurDataExist()) {\n      this.employeurSheet.setPeriodeSelectionne(this.store.dns.periodSelectionne)\n      this.employeurSheet.setEmployeurData(this.employeurData[0])\n      this.employeurSheet.createSheetContent()\n    }\n\n    this.wb.xlsx.writeBuffer().then((data) => {\n      const blob = new Blob([data], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      })\n      FileSaver.saveAs(\n        blob,\n        `declaration_CNAPS_${this.store.dns.periodSelectionne.toUpperCase()}_${\n          this.store.dns.anneeSelectionne\n        }.xlsx`,\n      )\n    })\n\n    this.mois1WorkSheet.resetData()\n    this.mois2WorkSheet.resetData()\n    this.mois3WorkSheet.resetData()\n  }\n\n  render() {\n    return (\n      <>\n        <div>\n          <button\n            type=\"submit\"\n            className=\"bg-customRed-900 text-white hover:bg-customRed-200 py-2 px-3 hover:text-slate-200\"\n            onClick={this.handleExport}\n          >\n            Générer\n          </button>\n        </div>\n      </>\n    )\n  }\n}\n\nDnsGenerator.propTypes = {}\n\nexport default DnsGenerator\n","import React, { useState, useEffect } from 'react'\nimport CustomSection from 'src/components/CustomSection/'\nimport Select from 'react-select'\nimport { selectCustomStyles } from 'src/scss/selectCustomStyles'\nimport DnsGen from './DnsGen'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { resetDns, setDns } from 'src/redux/dns/dnsReducers'\nimport { useLocation } from 'react-router-dom'\nimport { fetchDnsData } from 'src/redux/dns/dnsActions'\nimport { addNotification } from 'src/redux/notificationStack/notificationStackReducer'\nimport DnsGenerator from './DnsGenerator'\n\nconst DeclarationCnaps = () => {\n  const Body = () => {\n    const location = useLocation()\n    const pathName = location.pathname\n    const dispatch = useDispatch()\n    const dns = useSelector((state) => state.dns)\n    const dsnData = useSelector((state) => state.dns.dsnData)\n    const loading = useSelector((state) => state.dns.loading)\n    const periodSelectionne = useSelector((state) => state.dns.periodSelectionne)\n    const anneeSelectionne = useSelector((state) => state.dns.anneeSelectionne)\n\n    // Local state to hold initial values\n    const [initialPeriode, setInitialPeriode] = useState('t1')\n    const [initialAnnee, setInitialAnnee] = useState(new Date().getFullYear())\n\n    // Local state for dynamic rendering\n    const [periode, setPeriode] = useState(initialPeriode)\n    const [annee, setAnnee] = useState(initialAnnee)\n\n    const periodesOptions = [\n      { value: 't1', label: 'Trimestre 1' },\n      { value: 't2', label: 'Trimestre 2' },\n      { value: 't3', label: 'Trimestre 3' },\n    ]\n\n    useEffect(() => {\n      setInitialPeriode(dns?.periodSelectionne || 't1')\n      setInitialAnnee(dns?.anneeSelectionne || new Date().getFullYear())\n\n      setPeriode(dns?.periodSelectionne || 't1')\n      setAnnee(dns?.anneeSelectionne || new Date().getFullYear())\n    }, [dispatch, pathName, dns, initialPeriode, initialAnnee, dsnData, loading])\n\n    useEffect(() => {\n      dispatch(fetchDnsData({ periode: periodSelectionne, annee: anneeSelectionne }))\n    }, [])\n\n    // Générer la liste d'années de 1900 à l'année actuelle\n    const currentYear = new Date().getFullYear()\n    const years = Array.from({ length: currentYear - 1900 + 1 }, (_, index) => ({\n      value: currentYear - index,\n      label: (currentYear - index).toString(),\n    }))\n\n    const handleInputChange = (selectedOption, actionMeta) => {\n      if (actionMeta.name === 'periode') {\n        dispatch(setDns({ ...dns, periodSelectionne: selectedOption.value }))\n        setPeriode(selectedOption.value)\n        dispatch(fetchDnsData({ periode: selectedOption.value, annee: annee }))\n      } else if (actionMeta.name === 'annee') {\n        dispatch(setDns({ ...dns, anneeSelectionne: selectedOption.value }))\n        setAnnee(selectedOption.value)\n        dispatch(fetchDnsData({ periode: periode, annee: selectedOption.value }))\n      }\n    }\n\n    return (\n      <>\n        <form action=\"post\" className=\"w-full flex flex-col gap-2 p-4\">\n          <div className=\"w-full flex flex-row gap-2 justify-between flex-wrap items-end\">\n            <div>\n              <label className=\"form-label\" htmlFor=\"periode\">\n                Période\n              </label>\n              <Select\n                className=\"basic-multi-select\"\n                name=\"periode\"\n                options={periodesOptions}\n                onChange={(selectedOption, actionMeta) =>\n                  handleInputChange(selectedOption, actionMeta)\n                }\n                value={periodesOptions.find((option) => option.value === periode)}\n                styles={selectCustomStyles}\n              />\n            </div>\n            <div>\n              <label className=\"form-label\" htmlFor=\"annee\">\n                Année\n              </label>\n              <Select\n                className=\"basic-multi-select\"\n                name=\"annee\"\n                options={years}\n                onChange={(selectedOption, actionMeta) =>\n                  handleInputChange(selectedOption, actionMeta)\n                }\n                value={years.find((option) => option.value === annee)}\n                styles={selectCustomStyles}\n              />\n            </div>\n            <div className=\"flex\">\n              {/* <DnsGen /> */}\n              <DnsGenerator />\n            </div>\n          </div>\n        </form>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <CustomSection body={<Body />} title=\"Déclaration nominative de salaires\" />\n    </>\n  )\n}\n\nexport default DeclarationCnaps\n"],"names":["props","_jsx","_Fragment","children","_jsxs","className","concat","fullWidth","title","body","selectCustomStyles","control","provided","state","borderColor","isFocused","boxShadow","borderRadius","container","width","menu","option","backgroundColor","isSelected","constructor","workbook","this","employeurData","period","periodSelectionne","worksheet","addWorksheet","properties","tabColor","argb","colA","getColumn","colB","CellB30","getCell","row18","getRow","row21","f22","f23","f24","f25","f26","setPeriodeSelectionne","setEmployeurData","setPeriod","setDefaultFont","eachRow","row","rowNum","eachCell","cell","colNum","value","font","name","size","isEmployeurExist","undefined","verifyCellNotMerged","cell1","cell2","style","formatC4ToC9","i","mergeCells","rcs","nom","nif","tel","adresse","email","border","top","left","bottom","right","isPeriodExist","formatC12ToC16","length","formatC18ToE18","formatC21ToE21","bold","alignment","vertical","horizontal","formatB22ToF25","addRow","number","c","formatF22","formatF26","insertFormulaToF23","formula","insertFormulaToF24","insertFormulaToF25","insertFormulaToF26","isPeriodeSelectionneT1","isPeriodeSelectionneT2","isPeriodeSelectionneT3","insertValueToC18ToE18","createSheetContent","values","italic","underline","monthLabel","injectData","isTravailleurDataExist","formatData","fillCollData","console","log","resetData","travailleurData","clearAllCellValues","formatedData","startCharCode","charCodeAt","endCharCode","columnNames","columnData","generateColumnNames","setTravailleurData","data","employeeHours","isEmployeurDataExist","formatDate","annee","mois","dateStr","parsedDate","parse","Date","locale","fr","getFullYear","getMonth","toString","padStart","error","map","item","key","plafondReglemente","date","date_embauche","format","date_depart","non_plafonne","plafonne","cotisation_employeur","taux_cotisation_cnaps_employeur","cotisaton_travailleur","taux_cotisation_cnaps_salarie","cotisation_total","charCode","columnName","String","fromCharCode","push","colIndex","colName","dataKey","rowNumber","initializeHeaders","A1","B1","B2","C2","D1","E1","F1","F2","G2","H1","I1","J1","K1","K2","L2","M1","M2","N2","O2","P1","setLabel","setTabColor","adjustColumnWidths","columns","forEach","column","index","maxStringLength","includeEmpty","cellValue","cellLength","Math","max","min","formatCellToNumberDecima","dataCell","numFmt","formatA1","formatB1","formatB2","formatC2","formatD1","formatE1","formatF1","formatF2","formatG2","formatH1","formatI1","formatJ1","formatK1","formatK2","formatL2","formatM1","formatM2","formatN2","formatO2","formatP1","spliceRows","DnsGenerator","Component","super","isSalariesExist","salaries","getListSalarieMois1","listSalarieMois1","mois1List","includes","trimestre","store","dns","getListSalarieMois2","listSalarieMois2","mois2List","getListSalarieMois3","listSalarieMois3","mois3List","isDnsDataExist","dnsData","Array","from","employeur","handleExport","async","ev","preventDefault","getState","formatPeriod","mois1WorkSheet","mois2WorkSheet","mois3WorkSheet","employeurSheet","wb","xlsx","writeBuffer","then","blob","Blob","type","FileSaver","toUpperCase","anneeSelectionne","ExcelJS","EmployerWorksheet","MonthWorksheet","listSalarie","travailleurs","anneSelectionne","periodeSelectionne","componentDidMount","componentDidUpdate","render","onClick","DeclarationCnaps","Body","pathName","useLocation","pathname","dispatch","useDispatch","useSelector","dsnData","loading","initialPeriode","setInitialPeriode","useState","initialAnnee","setInitialAnnee","periode","setPeriode","setAnnee","periodesOptions","label","useEffect","fetchDnsData","currentYear","years","_","handleInputChange","selectedOption","actionMeta","setDns","action","htmlFor","Select","options","onChange","find","styles","CustomSection"],"sourceRoot":""}